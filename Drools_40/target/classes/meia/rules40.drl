package org.meia;

import org.meia.model.CategoryValue;
import org.meia.model.Conclusion;
import org.meia.model.Fact;
import org.meia.model.Question;
import org.meia.model.Quiz;
import org.meia.model.Answer;
import org.meia.model.QuestionType


global org.meia.model.Quiz quiz;

query "Conclusions"
	$conclusion : Conclusion()
end

//Criação de hipoteses para identificar se no quiz40
// Regras para ansiedade generalizada
rule "Verifica as respostas de Ansiedade Generalizada e guarda os factos das respostas para manipulação"
    when
        $question : Question(questionType == QuestionType.GENERAL_ANXIETY, answer != null) from quiz.getQuiz40()
    then
        Answer a = new Answer($question.getId(),$question.getQuestion(),$question.getAnswer(), QuestionType.GENERAL_ANXIETY);
        insert(a);
    end

rule "Verificar as respostas da Ansiedade Generalizada e gerar a soma das respostas"
    when
        Answer(id == 1, category == QuestionType.GENERAL_ANXIETY,$score1 : answer)
        Answer(id == 2, category == QuestionType.GENERAL_ANXIETY,$score2 : answer)
        Answer(id == 3, category == QuestionType.GENERAL_ANXIETY,$score3 : answer)
        Answer(id == 4, category == QuestionType.GENERAL_ANXIETY,$score4 : answer)
        Answer(id == 5, category == QuestionType.GENERAL_ANXIETY,$score5 : answer)
    then
        int value = $score1 + $score2 + $score3 + $score4 + $score5;
        CategoryValue cv = new CategoryValue("Ansiedade Generalizada",value);
        insert(cv);
end

rule "Verificar a pontuação da Ansiedade Generalizada é superior a 15"
    when
        CategoryValue (category == "Ansiedade Generalizada", value >= 15)
    then
        Conclusion c = new Conclusion(Conclusion.GENERAL_ANXIETY);
        insert(c);
end

rule "Verificar a pontuação da Ansiedade Generalizada é inferior a 15"
    when
        CategoryValue (category == "Ansiedade Generalizada", value < 15)
    then
        Conclusion c = new Conclusion(Conclusion.NOT_GENERAL_ANXIETY);
        insert(c);
end


// Regras para Sindrome de Pânico
rule "Verifica as respostas de Síndrome de Pânico e guarda os factos das respostas para manipulação"
when
    $question : Question(questionType == QuestionType.PANIC_SYNDROME, answer != null) from quiz.getQuiz40()
then
    Answer a = new Answer($question.getId(), $question.getQuestion(), $question.getAnswer(), QuestionType.PANIC_SYNDROME);
    insert(a);
end

rule "Verificar as respostas de Síndrome de Pânico e gerar a soma das respostas"
when
    Answer(id == 8, category == QuestionType.PANIC_SYNDROME, $score1 : answer)
    Answer(id == 9, category == QuestionType.PANIC_SYNDROME, $score2 : answer)
    Answer(id == 10, category == QuestionType.PANIC_SYNDROME, $score3 : answer)
    Answer(id == 11, category == QuestionType.PANIC_SYNDROME, $score4 : answer)
    Answer(id == 12, category == QuestionType.PANIC_SYNDROME, $score5 : answer)
then
    int value = $score1 + $score2 + $score3 + $score4 + $score5;
    CategoryValue cv = new CategoryValue("Síndrome de Pânico", value);
    insert(cv);
end

rule "Verificar a pontuação da Síndrome de Pânico é superior a 15"
when
    CategoryValue(category == "Síndrome de Pânico", value >= 15)
then
    Conclusion c = new Conclusion(Conclusion.PANIC_SYNDROME);
    insert(c);
end

rule "Verificar a pontuação da Síndrome de Pânico é inferior a 15"
when
    CategoryValue(category == "Síndrome de Pânico", value < 15)
then
    Conclusion c = new Conclusion(Conclusion.NOT_PANIC_SYNDROME);
    insert(c);
end

// Regras para Sindrome de pânico com agoraphobia
rule "Verifica as respostas de Síndrome de Pânico com Agorafobia e guarda os factos das respostas para manipulação"
when
    $question : Question(questionType == QuestionType.PANIC_AGORAPHOBIA_SYNDROME, answer != null) from quiz.getQuiz40()
then
    Answer a = new Answer($question.getId(), $question.getQuestion(), $question.getAnswer(), QuestionType.PANIC_AGORAPHOBIA_SYNDROME);
    insert(a);
end

rule "Verificar as respostas de Síndrome de Pânico com Agorafobia e gerar a soma das respostas"
when
    Answer(id == 15, category == QuestionType.PANIC_AGORAPHOBIA_SYNDROME, $score1 : answer)
    Answer(id == 16, category == QuestionType.PANIC_AGORAPHOBIA_SYNDROME, $score2 : answer)
    Answer(id == 17, category == QuestionType.PANIC_AGORAPHOBIA_SYNDROME, $score3 : answer)
    Answer(id == 18, category == QuestionType.PANIC_AGORAPHOBIA_SYNDROME, $score4 : answer)
    Answer(id == 19, category == QuestionType.PANIC_AGORAPHOBIA_SYNDROME, $score5 : answer)
then
    int value = $score1 + $score2 + $score3 + $score4 + $score5;
    CategoryValue cv = new CategoryValue("Síndrome de Pânico com Agorafobia", value);
    insert(cv);
end

rule "Verificar a pontuação da Síndrome de Pânico com Agorafobia é superior a 15"
when
    CategoryValue(category == "Síndrome de Pânico com Agorafobia", value >= 15)
then
    Conclusion c = new Conclusion(Conclusion.PANIC_AGORAPHOBIA_SYNDROME);
    insert(c);
end

rule "Verificar a pontuação da Síndrome de Pânico com Agorafobia é inferior a 15"
when
    CategoryValue(category == "Síndrome de Pânico com Agorafobia", value < 15)
then
    Conclusion c = new Conclusion(Conclusion.NOT_PANIC_AGORAPHOBIA_SYNDROME);
    insert(c);
end

// Regras para Agoraphobia
rule "Verifica as respostas de Agoraphobia e guarda os factos das respostas para manipulação"
    when
           $question : Question(questionType == QuestionType.AGORAPHOBIA_SYNDROME, answer != null) from quiz.getQuiz40()
    then
           Answer a = new Answer($question.getId(), $question.getQuestion(), $question.getAnswer(), QuestionType.AGORAPHOBIA_SYNDROME);
    insert(a);
end

rule "Verificar as respostas da Agoraphobia e gerar a soma das respostas"
    when
        Answer(id == 22, category == QuestionType.AGORAPHOBIA_SYNDROME,$score1 : answer)
        Answer(id == 23, category == QuestionType.AGORAPHOBIA_SYNDROME,$score2 : answer)
        Answer(id == 24, category == QuestionType.AGORAPHOBIA_SYNDROME,$score3 : answer)
        Answer(id == 25, category == QuestionType.AGORAPHOBIA_SYNDROME,$score4 : answer)
        Answer(id == 26, category == QuestionType.AGORAPHOBIA_SYNDROME,$score5 : answer)
    then
        int value = $score1 + $score2 + $score3 + $score4 + $score5;
        CategoryValue cv = new CategoryValue("Agorafobia",value);
        insert(cv);
end

rule "Verificar a pontuação da Agoraphobia é superior a 15"
    when
        CategoryValue (category == "Agorafobia",value >= 15)
    then
        Conclusion c = new Conclusion(Conclusion.AGORAPHOBIA_SYNDROME);
        insert(c);
end

rule "Verificar a pontuação da Agoraphobia é inferior a 15"
    when
        CategoryValue (category == "Agorafobia",value < 15)
    then
        Conclusion c = new Conclusion(Conclusion.NOT_AGORAPHOBIA_SYNDROME);
        insert(c);
end

// Regras para Fobia Especifica
rule "Verifica as respostas de Fobia Específica e guarda os factos das respostas para manipulação"
when
     $question : Question(questionType == QuestionType.SPECIFIC_PHOBIA, answer != null) from quiz.getQuiz40()
    then
           Answer a = new Answer($question.getId(), $question.getQuestion(), $question.getAnswer(), QuestionType.SPECIFIC_PHOBIA);
    insert(a);
end

rule "Verificar as respostas de Fobia Específica e gerar a soma das respostas"
when
    Answer(id == 29, category == QuestionType.SPECIFIC_PHOBIA, $score1 : answer)
    Answer(id == 30, category == QuestionType.SPECIFIC_PHOBIA, $score2 : answer)
    Answer(id == 31, category == QuestionType.SPECIFIC_PHOBIA, $score3 : answer)
    Answer(id == 32, category == QuestionType.SPECIFIC_PHOBIA, $score4 : answer)
    Answer(id == 33, category == QuestionType.SPECIFIC_PHOBIA, $score5 : answer)
then
    int value = $score1 + $score2 + $score3 + $score4 + $score5;
    CategoryValue cv = new CategoryValue("Fobia Específica", value);
    insert(cv);
end

rule "Verificar a pontuação de Fobia Específica é superior a 15"
when
    CategoryValue(category == "Fobia Específica", value >= 15)
then
    Conclusion c = new Conclusion(Conclusion.SPECIFIC_PHOBIA);
    insert(c);
end

rule "Verificar a pontuação de Fobia Específica é inferior a 15"
when
    CategoryValue(category == "Fobia Específica", value < 15)
then
    Conclusion c = new Conclusion(Conclusion.NOT_SPECIFIC_PHOBIA);
    insert(c);
end

// Regras para mutismo seletivo
rule "Verifica as respostas de Mutismo Seletivo e guarda os factos das respostas para manipulação"
when
 $question : Question(questionType == QuestionType.SELECTIVE_MUTISM, answer != null) from quiz.getQuiz40()
    then
           Answer a = new Answer($question.getId(), $question.getQuestion(), $question.getAnswer(), QuestionType.SELECTIVE_MUTISM);
    insert(a);
end

rule "Verificar as respostas de Mutismo Seletivo e gerar a soma das respostas"
when
    Answer(id == 36, category == QuestionType.SELECTIVE_MUTISM, $score1 : answer)
    Answer(id == 37, category == QuestionType.SELECTIVE_MUTISM, $score2 : answer)
    Answer(id == 38, category == QuestionType.SELECTIVE_MUTISM, $score3 : answer)
    Answer(id == 39, category == QuestionType.SELECTIVE_MUTISM, $score4 : answer)
    Answer(id == 40, category == QuestionType.SELECTIVE_MUTISM, $score5 : answer)
then
    int value = $score1 + $score2 + $score3 + $score4 + $score5;
    CategoryValue cv = new CategoryValue("Mutismo Seletivo", value);
    insert(cv);
end

rule "Verificar a pontuação de Mutismo Seletivo é superior a 15"
when
    CategoryValue(category == "Mutismo Seletivo", value >= 15)
then
    Conclusion c = new Conclusion(Conclusion.SELECTIVE_MUTISM);
    insert(c);
end

rule "Verificar a pontuação de Mutismo Seletivo é inferior a 15"
when
    CategoryValue(category == "Mutismo Seletivo", value < 15)
then
    Conclusion c = new Conclusion(Conclusion.NOT_SELECTIVE_MUTISM);
    insert(c);
end

// Regras para ansiedade de separação
rule "Verifica as respostas de Ansiedade de Separação e guarda os factos das respostas para manipulação"
when
 $question : Question(questionType == QuestionType.SEPARATION_ANXIETY, answer != null) from quiz.getQuiz40()
    then
    Answer a = new Answer($question.getId(), $question.getQuestion(), $question.getAnswer(), QuestionType.SEPARATION_ANXIETY);
    insert(a);
end

rule "Verificar as respostas de Ansiedade de Separação e gerar a soma das respostas"
when
    Answer(id == 43, category == QuestionType.SEPARATION_ANXIETY, $score1 : answer)
    Answer(id == 44, category == QuestionType.SEPARATION_ANXIETY, $score2 : answer)
    Answer(id == 45, category == QuestionType.SEPARATION_ANXIETY, $score3 : answer)
    Answer(id == 46, category == QuestionType.SEPARATION_ANXIETY, $score4 : answer)
    Answer(id == 47, category == QuestionType.SEPARATION_ANXIETY, $score5 : answer)
then
    int value = $score1 + $score2 + $score3 + $score4 + $score5;
    CategoryValue cv = new CategoryValue("Ansiedade de Separação", value);
    insert(cv);
end

rule "Verificar a pontuação de Ansiedade de Separação é superior a 15"
when
    CategoryValue(category == "Ansiedade de Separação", value >= 15)
then
    Conclusion c = new Conclusion(Conclusion.SEPARATION_ANXIETY);
    insert(c);
end

rule "Verificar a pontuação de Ansiedade de Separação é inferior a 15"
when
    CategoryValue(category == "Ansiedade de Separação", value < 15)
then
    Conclusion c = new Conclusion(Conclusion.NOT_SEPARATION_ANXIETY);
    insert(c);
end

// Regras para Fobia Social
rule "Verifica as respostas de Fobia Social e guarda os factos das respostas para manipulação"
when
 $question : Question(questionType == QuestionType.SOCIAL_PHOBIA, answer != null) from quiz.getQuiz40()
    then
           Answer a = new Answer($question.getId(), $question.getQuestion(), $question.getAnswer(), QuestionType.SOCIAL_PHOBIA);
    insert(a);
end

rule "Verificar as respostas de Fobia Social e gerar a soma das respostas"
when
    Answer(id == 50, category == QuestionType.SOCIAL_PHOBIA, $score1 : answer)
    Answer(id == 51, category == QuestionType.SOCIAL_PHOBIA, $score2 : answer)
    Answer(id == 52, category == QuestionType.SOCIAL_PHOBIA, $score3 : answer)
    Answer(id == 53, category == QuestionType.SOCIAL_PHOBIA, $score4 : answer)
    Answer(id == 54, category == QuestionType.SOCIAL_PHOBIA, $score5 : answer)
then
    int value = $score1 + $score2 + $score3 + $score4 + $score5;
    CategoryValue cv = new CategoryValue("Fobia Social", value);
    insert(cv);
end

rule "Verificar a pontuação de Fobia Social é superior a 15"
when
    CategoryValue(category == "Fobia Social", value >= 15)
then
    Conclusion c = new Conclusion(Conclusion.SOCIAL_PHOBIA);
    insert(c);
end

rule "Verificar a pontuação de Fobia Social é inferior a 15"
when
    CategoryValue(category == "Fobia Social", value < 15)
then
    Conclusion c = new Conclusion(Conclusion.NOT_SOCIAL_PHOBIA);
    insert(c);
end
